; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

[Setup]
AppName=Certificates Generation
AppVersion=1.1.0.3
VersionInfoVersion=1.1.0.3
AppPublisher=GE VERNOVA - Grid Solutions
VersionInfoCopyright=© 2025 GE Vernova - Grid Solutions. All rights reserved.
DefaultDirName={autopf}\Certificates Generation
DefaultGroupName=Certificates Generation
OutputDir=Output
OutputBaseFilename=Setup_Certificates_Generation_V1.1.0.3
SetupIconFile=.\app_icon.ico
Compression=lzma
SolidCompression=yes
DisableDirPage=no
ShowLanguageDialog=yes
CreateAppDir=yes
AppId={{Certificates-Generation-App}}
PrivilegesRequired=admin

[Tasks]
Name: "desktopicon"; Description: "Create a desktop icon"; GroupDescription: "Additional icons:"
Name: "startmenuicon"; Description: "Create a Start Menu shortcut"; GroupDescription: "Additional shortcuts:"

[Files]
Source: ".\Certificates Generation.exe"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\app_icon.ico"; DestDir: "{app}"; Flags: ignoreversion
Source: ".\Template\*"; DestDir: "{app}\Template"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: ".\Data\*"; DestDir: "{app}\Data"; Flags: ignoreversion recursesubdirs createallsubdirs

[Icons]
Name: "{group}\Certificates Generation"; Filename: "{app}\Certificates Generation.exe"; Tasks: startmenuicon; IconFilename: "{app}\app_icon.ico"
Name: "{commondesktop}\Certificates Generation"; Filename: "{app}\Certificates Generation.exe"; Tasks: desktopicon; IconFilename: "{app}\app_icon.ico"
Name: "{group}\Uninstall Certificates Generation"; Filename: "{uninstallexe}"

[Run]
Filename: "{app}\Certificates Generation.exe"; Description: "Launch Certificates Generation"; Flags: nowait postinstall skipifsilent

[Code]
procedure WriteInstallLog(Text: String);
var
  LogFile: String;
begin
  // Using the user's Temp folder to avoid early path resolution issues
  LogFile := ExpandConstant('{log}\Certificates_Generation_install_log.txt');
  SaveStringToFile(LogFile, '[' + GetDateTimeString('yyyy-mm-dd hh:nn:ss', '-', ':') + '] ' + Text + #13#10, True);
end;

// Fonction personnalisée pour identifier les utilisateurs "coe"
function GetSSOFromUserName(UserName: String): String;
begin
  case UserName of
    '212516775', '223118521', '260001889', '420001482',
    '212488890', '409007016', '212528822', '223086783',
    '212505476', '212509999', '212551113':
      Result := 'coe';
  else
    Result := 'User';
  end;
end;

// Block installation for non-"coe" users
function InitializeSetup(): Boolean;
var
  SSO, UserName: String;
begin
  UserName := ExpandConstant('{username}');
  SSO := GetSSOFromUserName(UserName);
  Log('User "' + UserName + '" identified as "' + SSO + '"');

  // Custom log
  WriteInstallLog('Installation launched by user "' + UserName + '" identified as "' + SSO + '".');

  if SSO <> 'coe' then begin
    WriteInstallLog('Access denied to user "' + UserName + '". Installation cancelled.');
    MsgBox('Access denied.' + #13#10 +
           'User "' + UserName + '" is not authorized to install Certificates Generation.' + #13#10 +
           'Please contact the administrator.', mbCriticalError, MB_OK);
    Result := False;
  end else begin
    WriteInstallLog('Access granted. Installation will proceed.');
    Result := True;
  end;
end;

// Section Uninstall - Cleanup files on uninstallation
[UninstallDelete]
; Remove all installed files and folders
Type: filesandordirs; Name: "{app}\Template"
Type: filesandordirs; Name: "{app}\Data"
Type: files; Name: "{app}\Certificates Generation.exe"
Type: files; Name: "{app}\app_icon.ico"

; Remove the desktop icon if it was created
Type: files; Name: "{commondesktop}\Certificates Generation"

; Remove the Start Menu shortcut if it was created
Type: files; Name: "{group}\Certificates Generation"


